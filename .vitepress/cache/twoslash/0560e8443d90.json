{"code":"import type { ArrayMember } from \"flex-tools/types\";\n// 基本类型数组\ntype NumberArray = number[];\ntype NumberType = ArrayMember<NumberArray>;  // number\n// 对象数组\ntype User = { id: number; name: string };\ntype Users = User[];\ntype UserType = ArrayMember<Users>;  // { id: number; name: string }\n\n// 联合类型数组\ntype MixedArray = (string | number)[];\ntype MixedType = ArrayMember<MixedArray>;  // string | number\n\n// 非数组类型\ntype NotArray = string;\ntype Result = ArrayMember<NotArray>;  // never","nodes":[{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":14,"length":11,"target":"ArrayMember","line":0,"character":14},{"type":"hover","text":"type NumberArray = number[]","start":68,"length":11,"target":"NumberArray","line":2,"character":5},{"type":"highlight","start":97,"length":10,"line":3,"character":5},{"type":"hover","text":"type NumberType = number","start":97,"length":10,"target":"NumberType","line":3,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":110,"length":11,"target":"ArrayMember","line":3,"character":18},{"type":"hover","text":"type NumberArray = number[]","start":122,"length":11,"target":"NumberArray","line":3,"character":30},{"type":"hover","text":"type User = {\n    id: number;\n    name: string;\n}","start":160,"length":4,"target":"User","line":5,"character":5},{"type":"hover","text":"(property) id: number","start":169,"length":2,"target":"id","line":5,"character":14},{"type":"hover","text":"(property) name: string","start":181,"length":4,"target":"name","line":5,"character":26},{"type":"hover","text":"type Users = User[]","start":202,"length":5,"target":"Users","line":6,"character":5},{"type":"hover","text":"type User = {\n    id: number;\n    name: string;\n}","start":210,"length":4,"target":"User","line":6,"character":13},{"type":"hover","text":"type UserType = {\n    id: number;\n    name: string;\n}","start":223,"length":8,"target":"UserType","line":7,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":234,"length":11,"target":"ArrayMember","line":7,"character":16},{"type":"hover","text":"type Users = User[]","start":246,"length":5,"target":"Users","line":7,"character":28},{"type":"hover","text":"type MixedArray = (string | number)[]","start":303,"length":10,"target":"MixedArray","line":10,"character":5},{"type":"hover","text":"type MixedType = string | number","start":342,"length":9,"target":"MixedType","line":11,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":354,"length":11,"target":"ArrayMember","line":11,"character":17},{"type":"hover","text":"type MixedArray = (string | number)[]","start":366,"length":10,"target":"MixedArray","line":11,"character":29},{"type":"hover","text":"type NotArray = string","start":414,"length":8,"target":"NotArray","line":14,"character":5},{"type":"hover","text":"type Result = never","start":438,"length":6,"target":"Result","line":15,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":447,"length":11,"target":"ArrayMember","line":15,"character":14},{"type":"hover","text":"type NotArray = string","start":459,"length":8,"target":"NotArray","line":15,"character":26}],"meta":{"extension":"ts","compilerOptions":{"strict":true,"module":99,"target":99,"allowJs":true,"skipDefaultLibCheck":true,"skipLibCheck":true,"moduleDetection":3,"baseUrl":"E:/Work/Code/sources/flex-tools/","moduleResolution":100},"handbookOptions":{"errors":[],"noErrors":false,"noErrorsCutted":false,"noErrorValidation":false,"noStaticSemanticInfo":false,"showEmit":false,"keepNotations":false},"removals":[[147,163]],"flagNotations":[],"virtualFiles":[{"offset":0,"filename":"index.ts","filepath":"E:/Work/Code/sources/flex-tools/index.ts","content":"import type { ArrayMember } from \"flex-tools/types\";\n// 基本类型数组\ntype NumberArray = number[];\ntype NumberType = ArrayMember<NumberArray>;  // number\n//   ^^^^^^^^^^\n// 对象数组\ntype User = { id: number; name: string };\ntype Users = User[];\ntype UserType = ArrayMember<Users>;  // { id: number; name: string }\n\n// 联合类型数组\ntype MixedArray = (string | number)[];\ntype MixedType = ArrayMember<MixedArray>;  // string | number\n\n// 非数组类型\ntype NotArray = string;\ntype Result = ArrayMember<NotArray>;  // never","extension":"ts","supportLsp":true}],"positionQueries":[],"positionCompletions":[],"positionHighlights":[[97,107,null]]},"queries":[],"completions":[],"errors":[],"highlights":[{"type":"highlight","start":97,"length":10,"line":3,"character":5}],"hovers":[{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":14,"length":11,"target":"ArrayMember","line":0,"character":14},{"type":"hover","text":"type NumberArray = number[]","start":68,"length":11,"target":"NumberArray","line":2,"character":5},{"type":"hover","text":"type NumberType = number","start":97,"length":10,"target":"NumberType","line":3,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":110,"length":11,"target":"ArrayMember","line":3,"character":18},{"type":"hover","text":"type NumberArray = number[]","start":122,"length":11,"target":"NumberArray","line":3,"character":30},{"type":"hover","text":"type User = {\n    id: number;\n    name: string;\n}","start":160,"length":4,"target":"User","line":5,"character":5},{"type":"hover","text":"(property) id: number","start":169,"length":2,"target":"id","line":5,"character":14},{"type":"hover","text":"(property) name: string","start":181,"length":4,"target":"name","line":5,"character":26},{"type":"hover","text":"type Users = User[]","start":202,"length":5,"target":"Users","line":6,"character":5},{"type":"hover","text":"type User = {\n    id: number;\n    name: string;\n}","start":210,"length":4,"target":"User","line":6,"character":13},{"type":"hover","text":"type UserType = {\n    id: number;\n    name: string;\n}","start":223,"length":8,"target":"UserType","line":7,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":234,"length":11,"target":"ArrayMember","line":7,"character":16},{"type":"hover","text":"type Users = User[]","start":246,"length":5,"target":"Users","line":7,"character":28},{"type":"hover","text":"type MixedArray = (string | number)[]","start":303,"length":10,"target":"MixedArray","line":10,"character":5},{"type":"hover","text":"type MixedType = string | number","start":342,"length":9,"target":"MixedType","line":11,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":354,"length":11,"target":"ArrayMember","line":11,"character":17},{"type":"hover","text":"type MixedArray = (string | number)[]","start":366,"length":10,"target":"MixedArray","line":11,"character":29},{"type":"hover","text":"type NotArray = string","start":414,"length":8,"target":"NotArray","line":14,"character":5},{"type":"hover","text":"type Result = never","start":438,"length":6,"target":"Result","line":15,"character":5},{"type":"hover","text":"(alias) type ArrayMember<T> = T extends (infer T)[] ? T : never\nimport ArrayMember","start":447,"length":11,"target":"ArrayMember","line":15,"character":14},{"type":"hover","text":"type NotArray = string","start":459,"length":8,"target":"NotArray","line":15,"character":26}],"tags":[]}